stages:
  - test
  - build
  - deploy

variables:
  IMAGE: $CI_REGISTRY_IMAGE
  IMAGE_TAG: $CI_COMMIT_TAG
  DOCKER_PATH: ./docker/Dockerfile

before_script:
  - whoami
  - pwd
  - ls -lrta

# SCAN
scan:
  stage: test
  environment:
    name: scan
  tags:
    - sonar-cli
  script:
    - sonar-scanner -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY -Dsonar.sources=. -Dsonar.host.url=$SONARQUBE_HOST_URL -Dsonar.login=$SONARQUBE_TOKEN

# TEST LINT, TEST BUILD AND UNIT TEST
lint-build-test:
  stage: test
  image: node:16-alpine
  tags:
    - docker-exec
  before_script:
    - whoami
    - yarn install --force
  script:
    - yarn lint
    - yarn build
    - yarn test -u

# BUILD IMAGE DEVELOPMENT
build-development:
  stage: build
  environment:
    name: development
  tags:
    - docker-cli
  script:
    - /bin/sh ./scripts/build_image.sh development
  rules:
    - if: $CI_COMMIT_REF_NAME == "dev" && $CI_PIPELINE_SOURCE == "push"
      when: on_success
    - when: never

# DEPLOY DEVELOPMENT
deploy-development:
  stage: deploy
  environment:
    name: development
  tags:
    - development
    - kube-cli
  script:
    - IMAGE_TAG=development
    - /bin/sh ./scripts/deployment.sh
  rules:
    - if: $CI_COMMIT_REF_NAME == "dev" && $CI_PIPELINE_SOURCE == "push"
      when: on_success
    - when: never

# BUILD IMAGE PRODUCTION
build-production:
  stage: build
  environment:
    name: production
  tags:
    - docker-cli
  script:
    - /bin/sh ./scripts/build_image.sh production
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/ && $CI_COMMIT_TAG != "storybook" && $CI_PIPELINE_SOURCE == "push"
      when: on_success
    - when: never
